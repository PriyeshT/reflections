What happens when you initialize a repository? Why do you need to do it?
- It converts an existing project or the new project to a Git repository. Initializing a repository makes it possible to start recording revisions of the project.

How is the staging area different from the working directory and the repository? What value do you think it offers?
- Staging area allows you to add the files that you would like to commit to it. The files are not yet added to the repository. So if change your mind and would like to revert your changes, you can remove the file from the staging area anytime. 

How can you use the staging area to make sure you have one commit per logical change?
- You can use the staging area to add only the files that you have changed for a particular logical change. Thus you can have only one commit per logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- Branches can be useful when you want to check out a new experimental feature to add to your program or you want to introduce a separate version of your program, but aren't sure about it at this time. This way your master branch can have the code that is working fine without any issues, and you can continue to add experimental features in your branches.